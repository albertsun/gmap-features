window.typeOf||(window.typeOf=function(a){var b=typeof a;"object"===b&&(a?a instanceof Array&&(b="array"):b="null");return b});window.console||(window.console={log:function(){}});var gmap=gmap||{};
(function(){gmap._=window._||function(){var a={},b={},c=Array.prototype.slice,e=Array.prototype.forEach,d=a.each=a.forEach=function(a,c,d){if(null!=a)if(e&&a.forEach===e)a.forEach(c,d);else if(a.length===+a.length)for(var g=0,h=a.length;g<h&&!(g in a&&c.call(d,a[g],g,a)===b);g++);else for(g in a)if(hasOwnProperty.call(a,g)&&c.call(d,a[g],g,a)===b)break};a.extend=function(a){d(c.call(arguments,1),function(b){for(var c in b)void 0!==b[c]&&(a[c]=b[c])});return a};return a}();google.maps.LatLng.prototype.toGeoJSON=
function(){return[this.lng(),this.lat()]};google.maps.MVCArray.prototype.toGeoJSON=function(){for(var a=this.getArray(),b=[],c=0,e=a.length;c<e;c++)b.push(a[c].toGeoJSON());return b};gmap.Feature=function(a){function b(){d.setHighlighted(!0)}function c(){d.setHighlighted(!1)}function e(){d.getSelected()?d.setSelected(!1):d.setSelected(!0)}var d=this;this.id=a.id;this.polygons=[];a.fields&&(this.fields=a.fields);this.controller=a.controller;this._highlighted=this._selected=!1;this.updateOptions(a);
for(var f=0,j=a.multipolygon.length;f<j;f++)this.polygons.push(new google.maps.Polygon(gmap._.extend({},{paths:a.multipolygon[f],map:a.map}))),google.maps.event.addListener(this.polygons[f],"mousemove",b),google.maps.event.addListener(this.polygons[f],"mouseout",c),google.maps.event.addListener(this.polygons[f],"click",e);this.redraw()};gmap.Feature.prototype={_unselected_poly_options:{clickable:!0,fillColor:"#AAAAAA",strokeColor:"#000000",strokeWeight:1,strokeOpacity:0.25},_selected_poly_options:{strokeOpacity:1,
strokeWeight:1,strokeColor:"#0000FF"},_highlighted_poly_options:{strokeOpacity:1,strokeWeight:1,strokeColor:"#00FF00"},updateOptions:function(a){this.highlightCallback=a.highlightCallback;this.selectCallback=a.selectCallback;var b=function(){return{}};this._responsive_unselected_poly_options=null==a.responsive_unselected_opts?b:a.responsive_unselected_opts;this._responsive_highlighted_poly_options=null==a.responsive_highlighted_opts?b:a.responsive_highlighted_opts;this._responsive_selected_poly_options=
null==a.responsive_selected_opts?b:a.responsive_selected_opts;a.unselected_opts&&(this._unselected_poly_options=gmap._.extend({},gmap.Feature.prototype._unselected_poly_options,a.unselected_opts));a.highlighted_opts&&(this._highlighted_poly_options=gmap._.extend({},gmap.Feature.prototype._highlighted_poly_options,a.highlighted_opts));a.selected_opts&&(this._selected_poly_options=gmap._.extend({},gmap.Feature.prototype._selected_poly_options,a.selected_opts));this.unselected_poly_options=a.color?gmap._.extend({},
this._unselected_poly_options,{fillColor:a.color}):gmap._.extend({},this._unselected_poly_options)},remove:function(){for(var a=0,b=this.polygons.length;a<b;a++)google.maps.event.clearListeners(this.polygons[a],"mousemove"),google.maps.event.clearListeners(this.polygons[a],"mouseout"),this.polygons[a].setMap(null);this.polygons=this.controller=null},toGeoJSON:function(){for(var a=[],b=0,c=this.polygons.length;b<c;b++)a.push(this.polygons[b].getPaths().toGeoJSON());return a},redraw:function(){var a=
gmap._.extend({},this.unselected_poly_options,this._responsive_unselected_poly_options());this._highlighted&&(a=gmap._.extend(a,this._highlighted_poly_options,this._responsive_highlighted_poly_options()));this._selected&&(a=gmap._.extend(a,this._selected_poly_options,this._responsive_selected_poly_options()));for(i=0,len=this.polygons.length;i<len;i++)this.polygons[i].setOptions(a)},getSelected:function(){return this._selected},setSelected:function(a){!0===a?(null!==this.controller.selected&&this.controller.selected.setSelected(!1),
this._selected=!0,this.controller.selected=this,this.redraw(),this.selectCallback&&this.selectCallback()):!1===a&&(this._selected=!1,this.redraw())},getHighlighted:function(){return this._highlighted},setHighlighted:function(a){!0===a&&!1===this._highlighted?(this._highlighted=!0,this.redraw(),this.highlightCallback&&this.highlightCallback()):!1===a&&!0===this._highlighted&&(this._highlighted=!1,this.redraw())}}})();
window.typeOf||(window.typeOf=function(a){var b=typeof a;"object"===b&&(a?a instanceof Array&&(b="array"):b="null");return b});window.console||(window.console={log:function(){}});gmap=gmap||{};gmap.geom=gmap.geom||{};gmap.geom.ParseGeoJSONMultiPolygon=function(a){var b,c,e,d,f,j,k=[],g,h;for(b=0,c=a.length;b<c;b++){g=[];for(e=0,d=a[b].length;e<d;e++){h=[];for(f=0,j=a[b][e].length;f<j;f++)h.push(new google.maps.LatLng(a[b][e][f][1],a[b][e][f][0]));g.push(h)}k.push(g)}return k};
gmap.geom.ParseGeoJSONPolygon=function(a){var b,c,e,d,f=[],j;for(b=0,c=a.length;b<c;b++){j=[];for(e=0,d=a[b].length;e<d;e++)j.push(new google.maps.LatLng(a[b][e][1],a[b][e][0]));f.push(j)}return f};gmap.geom.ParseKMLMultiPolygon=function(a){return $.map($(a).find("Polygon"),function(a){return[$.map($(a).find("coordinates"),function(a){a=$(a).text().split(/\s+/);return[$.map(a,function(a){if(""!==a)return new google.maps.LatLng(parseFloat($.trim(a).split(",")[1]),parseFloat($.trim(a).split(",")[0]))})]})]})};
gmap=gmap||{};
(function(){function a(a){a=$(a);return $.map(a.find("Placemark"),function(a){var b={};$placemark=$(a);b.geometry=$placemark.find("MultiGeometry")[0];b.id=$placemark.find("name").text();b.properties={};for(var a=$placemark.find("ExtendedData Data"),d,f,j=0,k=a.length;j<k;j++)d=$(a[j]),f=d.find("value").text(),isNaN(parseFloat(f))||(f=Number(f)),b.properties[d.attr("name")]=f;return b})}gmap.load_polygons=function(b,c){var e={},d=b.data,f={selected:null},j=function(a){var b={map:a.map};gmap._.extend(b,
a);return b};if("object"===typeOf(c)){var e=c,k;for(k in c)if(c.hasOwnProperty(k)){var g=j(b);b.getColor&&(g.color=b.getColor(c[k].fields));c[k].updateOptions(g);c[k].redraw()}}else for(var d="kml"==b.data_type?a(d):d.features,h=0,l=d.length;h<l;h++)k="array"!==typeOf(d[h].geometry.coordinates)?gmap.geom.ParseKMLMultiPolygon(d[h].geometry):"Polygon"==d[h].geometry.type?[gmap.geom.ParseGeoJSONPolygon(d[h].geometry.coordinates)]:gmap.geom.ParseGeoJSONMultiPolygon(d[h].geometry.coordinates),g=j(b),g.multipolygon=
k,g.controller=f,b.getColor&&(g.color=b.getColor(d[h].properties)),g.id=d[h].id,g.fields=d[h].properties,e[d[h].id]=new gmap.Feature(g);return e};gmap.remove_polygons=function(a){for(var c in a)a.hasOwnProperty(c)&&(a[c].remove(),delete a[c]);return a}})();
